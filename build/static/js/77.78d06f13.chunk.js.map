{"version":3,"file":"static/js/77.78d06f13.chunk.js","mappings":"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","sources":["components/Cards/TitleCard.js","components/Typography/Subtitle.js","features/leads/index.js","pages/protected/Leads.js"],"sourcesContent":["import Subtitle from \"../Typography/Subtitle\"\n\n  \n  function TitleCard({title, children, topMargin, TopSideButtons}){\n      return(\n          <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\n\n            {/* Title for Card */}\n              <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\n                {title}\n\n                {/* Top side button, show only if present */}\n                {\n                    TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\n                }\n              </Subtitle>\n              \n              <div className=\"divider mt-2\"></div>\n          \n              {/** Card Body */}\n              <div className='h-full w-full pb-6 bg-base-100'>\n                  {children}\n              </div>\n          </div>\n          \n      )\n  }\n  \n  \n  export default TitleCard"," function Subtitle({styleClass, children}){\n    return(\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\n    )\n}\n\nexport default Subtitle","import moment from \"moment\"\nimport { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport TitleCard from \"../../components/Cards/TitleCard\"\nimport { openModal } from \"../common/modalSlice\"\nimport { deleteLead, getLeadsContent } from \"./leadSlice\"\nimport { CONFIRMATION_MODAL_CLOSE_TYPES, MODAL_BODY_TYPES } from '../../utils/globalConstantUtil'\nimport TrashIcon from '@heroicons/react/24/outline/TrashIcon'\nimport { showNotification } from '../common/headerSlice'\nimport { API_REQUEST } from \"../../api\"\nimport { URSL } from \"../../constants/URLS\"\nimport { useState } from \"react\"\nimport { USER_CONFIG } from \"../../constants/User\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst TopSideButtons = () => {\n\n    const dispatch = useDispatch()\n\n    const openAddNewLeadModal = () => {\n        dispatch(openModal({title : \"Add New User\", bodyType : MODAL_BODY_TYPES.LEAD_ADD_NEW}))\n    }\n\n    return(\n        <div className=\"inline-block float-right\">\n            <button className=\"btn px-6 btn-sm normal-case btn-primary\" onClick={() => openAddNewLeadModal()}>Add New</button>\n        </div>\n    )\n}\nconst TopSecondButton = () => {\n\n    const dispatch = useDispatch()\n\n    const openAddNewLeadModal = () => {\n        dispatch(openModal({title : \"Add Excel File\", bodyType : MODAL_BODY_TYPES.MODAL_EXCEL_ADD}))\n    }\n\n    return(\n        <div className=\"inline-block float-right\" style={{marginLeft: 10,}}>\n            <button className=\"btn px-6 btn-sm normal-case btn-primary\" onClick={() => openAddNewLeadModal()}>Add Excel File</button>\n        </div>\n    )\n}\n\nfunction Leads(){\n\n    const [allUsers,setAllUsers]=useState([]);\n\n    useEffect(()=>{\n        getAllUsers()\n    },[])\n    \n    const getAllUsers=async()=>{\n        try {\n        const token=localStorage.getItem(USER_CONFIG.TOKEN_DETAIL)\n            const usersList=await API_REQUEST.getData(URSL.GET_USER,token)\n            console.log(usersList,\"ss\")\n            if(usersList.data.status==200){\n                console.log(usersList.data.data)\n                setAllUsers(usersList?.data?.data)\n            }else{\n                throw usersList\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    const deleteUser=async(item,selectedIndex)=>{\n        try {\n            const token=localStorage.getItem(USER_CONFIG.TOKEN_DETAIL);\n            const response=await API_REQUEST.postData(URSL.DELETE_USER,{id:item.id},token)\n            if(response.data.status !== 200)\n                throw response\n\n            setAllUsers(items =>\n                items.map((value, index) => {\n                    if (index === selectedIndex) {\n                        value.is_delete =  value.is_delete?0:1;\n                    } \n                    return value;\n                }),\n            );\n            toast(`Delete Status Updated Successfully`)\n        } catch (error) {\n            toast(\"User not deleted\")\n            console.log(error);\n        }\n    }\n    const updateuserActiveStatus=async(item,selectedIndex)=>{\n        try {\n            const token=localStorage.getItem(USER_CONFIG.TOKEN_DETAIL);\n            const response=await API_REQUEST.postData(URSL.UPDATE_STAUS_USER,{id:item.id},token)\n            if(response.data.status !== 200)\n                throw response\n            setAllUsers(items =>\n                items.map((value, index) => {\n                    if (index === selectedIndex) {\n                        value.is_active =  value.is_active?0:1;\n                    } \n                    return value;\n                }),\n            );\n            toast(\"User Active Status Changed\")\n        } catch (error) {\n            toast(\"User Active Status not Changes\")\n            console.log(error);\n        }\n    }\n    return(\n        <>\n            \n            <TitleCard title=\"Current Users\" topMargin=\"mt-2\" TopSideButtons={<>\n                <TopSecondButton />\n                <TopSideButtons />\n            </>}>\n\n                {/* Leads List in table format loaded from slice after api call */}\n            <div className=\"overflow-x-auto w-full\">\n                <table className=\"table w-full\">\n                    <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Email Id</th>\n                        <th>Phone</th>\n                        <th>Activity</th>\n                        <th>Delete Status</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            allUsers.length>0 &&\n                            allUsers.map((l, k) => {\n                                return(\n                                    <tr key={k}>\n                                    <td>\n                                        <div className=\"flex items-center space-x-3\">\n                                            {/* <div className=\"avatar\">\n                                                <div className=\"mask mask-squircle w-12 h-12\">\n                                                    <img src={l.avatar} alt=\"Avatar\" />\n                                                </div>\n                                            </div> */}\n                                            <div>\n                                                <div className=\"font-bold\">{l.full_name}</div>\n                                            </div>\n                                        </div>\n                                    </td>\n                                    <td>{l.email}</td>\n                                    <td>{l.phone}</td>\n                                    <td>\n                                        <button className=\"btn btn-square btn-ghost\" onClick={() => updateuserActiveStatus(l,k)}>\n                                            <td style={{color:l.is_active?\"green\":\"red\"}}>{l.is_active?\"ACTIVE\":\"InActive\"}</td>\n                                        </button>\n                                    </td>\n                                    <td>\n                                        <button className=\"btn btn-square btn-ghost\" onClick={() => deleteUser(l,k)}>\n                                            <td style={{color:l.is_delete?\"green\":\"red\"}}>{l.is_delete?\"DELETED\":\"DELETE\"}</td>\n                                        </button>\n                                    </td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n            </TitleCard>\n            <ToastContainer />\n        </>\n    )\n}\n\n\nexport default Leads","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setPageTitle } from '../../features/common/headerSlice'\nimport Leads from '../../features/leads'\n\nfunction InternalPage(){\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(setPageTitle({ title : \"Users\"}))\n      }, [])\n\n\n    return(\n        <Leads />\n    )\n}\n\nexport default InternalPage"],"names":["_ref","title","children","topMargin","TopSideButtons","_jsxs","className","Subtitle","styleClass","_jsx","concat","dispatch","useDispatch","onClick","openModal","bodyType","MODAL_BODY_TYPES","LEAD_ADD_NEW","TopSecondButton","style","marginLeft","MODAL_EXCEL_ADD","_useState","useState","_useState2","_slicedToArray","allUsers","setAllUsers","useEffect","getAllUsers","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","usersList","_usersList$data","wrap","_context","prev","next","localStorage","getItem","USER_CONFIG","TOKEN_DETAIL","API_REQUEST","getData","URSL","GET_USER","sent","console","log","data","status","t0","stop","apply","arguments","deleteUser","_ref2","_callee2","item","selectedIndex","response","_context2","postData","DELETE_USER","id","items","map","value","index","is_delete","toast","_x","_x2","updateuserActiveStatus","_ref3","_callee3","_context3","UPDATE_STAUS_USER","is_active","_x3","_x4","_Fragment","TitleCard","length","l","k","full_name","email","phone","color","ToastContainer","setPageTitle","Leads"],"sourceRoot":""}