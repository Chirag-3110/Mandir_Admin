{"version":3,"file":"static/js/193.264a4f5d.chunk.js","mappings":"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","sources":["components/Cards/TitleCard.js","components/SearchBar.js","components/Typography/Subtitle.js","features/leads/index.js","pages/protected/Leads.js"],"sourcesContent":["import Subtitle from \"../Typography/Subtitle\"\n\n  \n  function TitleCard({title, children, topMargin, TopSideButtons}){\n      return(\n          <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\n\n            {/* Title for Card */}\n              <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\n                {title}\n\n                {/* Top side button, show only if present */}\n                {\n                    TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\n                }\n              </Subtitle>\n              \n              <div className=\"divider mt-2\"></div>\n          \n              {/** Card Body */}\n              <div className='h-full w-full pb-6 bg-base-100'>\n                  {children}\n              </div>\n          </div>\n          \n      )\n  }\n  \n  \n  export default TitleCard","import React, { useState } from 'react'\nimport { USER_CONFIG } from '../constants/User'\nimport { API_REQUEST } from '../api';\nimport './search.css'\nexport default function SearchBar({url,results,isNoData}) {\n    const [search, setSearch] = useState('')\n\n    const searchData=async()=>{\n        try {\n            console.log(url,\"uel\");\n            if(!search)\n                return\n            const token=localStorage.getItem(USER_CONFIG.TOKEN_DETAIL);\n            const result=await API_REQUEST.postData(url,{query:search},token);\n            if(result.error)\n                throw result\n            results(result.data.data);\n        } catch (error) {\n            results([]);\n        }\n    }\n\n    return (\n        <div style={{padding:10,marginBottom:10,borderRadius:5,borderWidth:1,borderColor:\"grey\",display:\"flex\",justifyContent:\"space-between\"}} >\n            <input \n                className='searchInput'\n                type=\"text\" \n                placeholder=\"Search name\" \n                value={search}\n                onChange={(e) => {\n                    if(e.target.value===\"\")\n                        results([])\n                    setSearch(e.target.value)\n                }}\n                style={{width:'80%',paddingLeft:20,fontWeight:\"500\",borderStyle:\"none\",border:0}}\n            />\n            <button className=\"btn px-6 btn-sm normal-case btn-primary\" onClick={searchData}>\n                Search\n            </button>\n        </div>\n    )\n}\n"," function Subtitle({styleClass, children}){\n    return(\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\n    )\n}\n\nexport default Subtitle","import moment from \"moment\"\nimport { useEffect, useMemo } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport TitleCard from \"../../components/Cards/TitleCard\"\nimport { openModal } from \"../common/modalSlice\"\nimport { deleteLead, getLeadsContent } from \"./leadSlice\"\nimport { CONFIRMATION_MODAL_CLOSE_TYPES, MODAL_BODY_TYPES } from '../../utils/globalConstantUtil'\nimport TrashIcon from '@heroicons/react/24/outline/TrashIcon'\nimport { showNotification } from '../common/headerSlice'\nimport { API_REQUEST } from \"../../api\"\nimport { URSL } from \"../../constants/URLS\"\nimport { useState } from \"react\"\nimport { USER_CONFIG } from \"../../constants/User\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Pagination from \"../../components/pagination/pagination\"\nimport ReactPaginate from \"react-paginate\"\nimport './paginate.css'\nimport SearchBar from \"../../components/SearchBar\"\nconst TopSideButtons = () => {\n\n    const dispatch = useDispatch()\n\n    const openAddNewLeadModal = () => {\n        dispatch(openModal({title : \"Add New User\", bodyType : MODAL_BODY_TYPES.LEAD_ADD_NEW}))\n    }\n\n    return(\n        <div className=\"inline-block float-right\">\n            <button className=\"btn px-6 btn-sm normal-case btn-primary\" onClick={() => openAddNewLeadModal()}>Add New</button>\n        </div>\n    )\n}\nconst TopSecondButton = () => {\n\n    const dispatch = useDispatch()\n\n    const openAddNewLeadModal = () => {\n        dispatch(openModal({title : \"Add Excel File\", bodyType : MODAL_BODY_TYPES.MODAL_EXCEL_ADD}))\n    }\n\n    return(\n        <div className=\"inline-block float-right\" style={{marginLeft: 10,}}>\n            <button className=\"btn px-6 btn-sm normal-case btn-primary\" onClick={() => openAddNewLeadModal()}>Add Excel File</button>\n        </div>\n    )\n}\nlet PageSize = 0;\n\nfunction Leads(){\n    const dispatch=useDispatch()\n    const [allUsers,setAllUsers]=useState([]);\n    const [searchedUser,serDearchedUser]=useState([]);\n    const [page,setPage]=useState(1)\n    const [currentPage, setCurrentPage] = useState(1);\n    const paginate = ({ selected }) => {\n       setCurrentPage(selected + 1);\n       getAllUsers(selected+1)\n    };\n\n    \n    useEffect(()=>{\n        getAllUsers(page)\n    },[])\n    \n    const getAllUsers=async(page)=>{\n        try {\n        const token=localStorage.getItem(USER_CONFIG.TOKEN_DETAIL)\n            const usersList=await API_REQUEST.getData(URSL.GET_USER,token,{page:page});\n            if(usersList.data.status==200){\n                console.log(usersList.data.data)\n                setAllUsers(usersList?.data?.data.users)\n                PageSize=usersList?.data.data.pagination.totalPages\n                setCurrentPage(usersList?.data.data.pagination.page)\n            }else{\n                throw usersList\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    const deleteUser=async(item,selectedIndex)=>{\n        try {\n            const token=localStorage.getItem(USER_CONFIG.TOKEN_DETAIL);\n            const response=await API_REQUEST.postData(URSL.DELETE_USER,{id:item.id},token)\n            if(response.data.status !== 200)\n                throw response\n\n            setAllUsers(items =>\n                items.map((value, index) => {\n                    if (index === selectedIndex) {\n                        value.is_delete =  value.is_delete?0:1;\n                    } \n                    return value;\n                }),\n            );\n            toast(`Delete Status Updated Successfully`)\n        } catch (error) {\n            toast(\"User not deleted\")\n            console.log(error);\n        }\n    }\n    const updateuserActiveStatus=async(item,selectedIndex)=>{\n        try {\n            const token=localStorage.getItem(USER_CONFIG.TOKEN_DETAIL);\n            const response=await API_REQUEST.postData(URSL.UPDATE_STAUS_USER,{id:item.id},token)\n            if(response.data.status !== 200)\n                throw response\n            setAllUsers(items =>\n                items.map((value, index) => {\n                    if (index === selectedIndex) {\n                        value.is_active =  value.is_active?0:1;\n                    } \n                    return value;\n                }),\n            );\n            toast(\"User Active Status Changed\")\n        } catch (error) {\n            toast(\"User Active Status not Changes\")\n            console.log(error);\n        }\n    }\n    return(\n        <>\n            \n            <TitleCard title=\"Current Users\" topMargin=\"mt-2\" TopSideButtons={<>\n                <TopSecondButton />\n                <TopSideButtons />\n            </>}>\n\n                {/* Leads List in table format loaded from slice after api call */}\n\n            <SearchBar url={URSL.SEARHC_USER} results={(value)=>serDearchedUser(value)} />\n            <div className=\"overflow-x-auto w-full\">\n                <table className=\"table w-full\">\n                    <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Email Id</th>\n                        <th>Phone</th>\n                        <th>Age</th>\n                        <th>Gender</th>\n                        <th>Occupation</th>\n                        <th>Gotra</th>\n                        <th>Activity</th>\n                        <th>Delete Status</th>\n                        <th>Actions</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            (searchedUser.length==0?allUsers:searchedUser).length>0 &&\n                            (searchedUser.length==0?allUsers:searchedUser).map((l, k) => {\n                                return(\n                                    <tr key={k}>\n                                        <td>\n                                            <div className=\"flex items-center space-x-3\">\n                                                {/* <div className=\"avatar\">\n                                                    <div className=\"mask mask-squircle w-12 h-12\">\n                                                        <img src={l.avatar} alt=\"Avatar\" />\n                                                    </div>\n                                                </div> */}\n                                                <div>\n                                                    <div className=\"font-bold\">{l.full_name}</div>\n                                                </div>\n                                            </div>\n                                        </td>\n                                        <td>{l.email}</td>\n                                        <td>{l.phone}</td>\n                                        <td>{l.age}</td>\n                                        <td>{l.gender}</td>\n                                        <td>{l.occupation}</td>\n                                        <td>{l.gotra}</td>\n                                        <td>\n                                            <button className=\"btn btn-square btn-ghost\" onClick={() => updateuserActiveStatus(l,k)}>\n                                                <td style={{color:l.is_active?\"green\":\"red\"}}>{l.is_active?\"ACTIVE\":\"InActive\"}</td>\n                                            </button>\n                                        </td>\n                                        <td>\n                                            <button className=\"btn btn-square btn-ghost\" onClick={() => deleteUser(l,k)}>\n                                                <td style={{color:l.is_delete?\"green\":\"red\"}}>{l.is_delete?\"DELETED\":\"DELETE\"}</td>\n                                            </button>\n                                        </td>\n                                        <td>\n                                            <button className=\"btn btn-square btn-ghost\" onClick={() => dispatch(openModal({title : \"Edit User\", bodyType : MODAL_BODY_TYPES.EDIT_LEAD_MODAL,extraObject:l}))}>\n                                                <td style={{color:\"green\"}}>Edit</td>\n                                            </button>\n                                        </td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n            </TitleCard>\n            {\n                searchedUser.length==0 &&\n                <ReactPaginate\n                    onPageChange={paginate}\n                    pageCount={PageSize}\n                    previousLabel={'Prev'}\n                    nextLabel={'Next'}\n                    containerClassName={'pagination'}\n                    pageLinkClassName={'page-number'}\n                    previousLinkClassName={'page-number'}\n                    nextLinkClassName={'page-number'}\n                    activeLinkClassName={'active'}\n                />\n            }\n            <ToastContainer />\n        </>\n    )\n}\n\n\nexport default Leads","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setPageTitle } from '../../features/common/headerSlice'\nimport Leads from '../../features/leads'\n\nfunction InternalPage(){\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(setPageTitle({ title : \"Users\"}))\n      }, [])\n\n\n    return(\n        <Leads />\n    )\n}\n\nexport default InternalPage"],"names":["_ref","title","children","topMargin","TopSideButtons","_jsxs","className","Subtitle","styleClass","_jsx","SearchBar","url","results","_useState","isNoData","useState","_useState2","_slicedToArray","search","setSearch","searchData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","result","wrap","_context","prev","next","console","log","abrupt","localStorage","getItem","USER_CONFIG","TOKEN_DETAIL","API_REQUEST","postData","query","sent","error","data","t0","stop","apply","arguments","style","padding","marginBottom","borderRadius","borderWidth","borderColor","display","justifyContent","type","placeholder","value","onChange","e","target","width","paddingLeft","fontWeight","borderStyle","border","onClick","concat","dispatch","useDispatch","openModal","bodyType","MODAL_BODY_TYPES","LEAD_ADD_NEW","TopSecondButton","marginLeft","MODAL_EXCEL_ADD","PageSize","allUsers","setAllUsers","_useState3","_useState4","searchedUser","serDearchedUser","_useState5","_useState6","page","_useState7","_useState8","setCurrentPage","useEffect","getAllUsers","usersList","_usersList$data","getData","URSL","GET_USER","status","users","pagination","totalPages","_x","deleteUser","_ref3","_callee2","item","selectedIndex","response","_context2","DELETE_USER","id","items","map","index","is_delete","toast","_x2","_x3","updateuserActiveStatus","_ref4","_callee3","_context3","UPDATE_STAUS_USER","is_active","_x4","_x5","_Fragment","TitleCard","SEARHC_USER","length","l","k","full_name","email","phone","age","gender","occupation","gotra","color","EDIT_LEAD_MODAL","extraObject","ReactPaginate","onPageChange","selected","pageCount","previousLabel","nextLabel","containerClassName","pageLinkClassName","previousLinkClassName","nextLinkClassName","activeLinkClassName","ToastContainer","setPageTitle","Leads"],"sourceRoot":""}