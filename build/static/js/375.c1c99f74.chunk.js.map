{"version":3,"file":"static/js/375.c1c99f74.chunk.js","mappings":"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","sources":["components/Cards/TitleCard.js","components/Typography/Subtitle.js","features/integration/index.js","pages/protected/Integration.js"],"sourcesContent":["import Subtitle from \"../Typography/Subtitle\"\n\n  \n  function TitleCard({title, children, topMargin, TopSideButtons}){\n      return(\n          <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\n\n            {/* Title for Card */}\n              <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\n                {title}\n\n                {/* Top side button, show only if present */}\n                {\n                    TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\n                }\n              </Subtitle>\n              \n              <div className=\"divider mt-2\"></div>\n          \n              {/** Card Body */}\n              <div className='h-full w-full pb-6 bg-base-100'>\n                  {children}\n              </div>\n          </div>\n          \n      )\n  }\n  \n  \n  export default TitleCard"," function Subtitle({styleClass, children}){\n    return(\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\n    )\n}\n\nexport default Subtitle","import { useState } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport TitleCard from \"../../components/Cards/TitleCard\"\nimport { showNotification } from \"../common/headerSlice\"\nimport { useEffect } from \"react\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { URSL } from \"../../constants/URLS\"\nimport { USER_CONFIG } from \"../../constants/User\"\nimport {API_REQUEST} from '../../api/index';\nfunction Integration(){\n\n    const dispatch = useDispatch()\n\n    const [newsList, setnewsList] = useState([])\n    useEffect(()=>{\n        getNewsList();\n    },[])\n    const getNewsList=async()=>{\n        try {\n            const token=localStorage.getItem(USER_CONFIG.TOKEN_DETAIL)\n            const news=await API_REQUEST.getData(URSL.GET_NEWS,token)\n            console.log(news,\"ss\")\n            if(news.data.status==200){\n                console.log(news.data.data)\n                setnewsList(news?.data?.data)\n            }else{\n                throw news\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    const deleteNews=async(item,selectedIndex)=>{\n        try {\n            const token=localStorage.getItem(USER_CONFIG.TOKEN_DETAIL);\n            const response=await API_REQUEST.postData(URSL.DELETE_UPDATE_NEWS,{id:item.id},token)\n            if(response.data.status !== 200)\n                throw response\n\n                setnewsList(items =>\n                items.map((value, index) => {\n                    if (index === selectedIndex) {\n                        value.is_delete =  value.is_delete?0:1;\n                    } \n                    return value;\n                }),\n            );\n            toast(`Delete Status Updated Successfully`)\n        } catch (error) {\n            toast(\"News not deleted\")\n            console.log(error);\n        }\n    }\n    const updateNewsStatus=async(item,selectedIndex)=>{\n        try {\n            const token=localStorage.getItem(USER_CONFIG.TOKEN_DETAIL);\n            const response=await API_REQUEST.postData(URSL.UPDATE_NEWS_STATUS,{id:item.id},token)\n            if(response.data.status !== 200)\n                throw response\n            setnewsList(items =>\n                items.map((value, index) => {\n                    if (index === selectedIndex) {\n                        value.is_active =  value.is_active?0:1;\n                    } \n                    return value;\n                }),\n            );\n            toast(\"News Status Changed\")\n        } catch (error) {\n            toast(\"News Status not Changes\")\n            console.log(error);\n        }\n    }\n    return(\n        <>\n             <div className=\"overflow-x-auto w-full\">\n                <table className=\"table w-full\">\n                    <thead>\n                    <tr>\n                        <th>Title</th>\n                        <th>Activity</th>\n                        <th>Delete</th>\n                        <th></th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            newsList.length>0 &&\n                            newsList.map((item, index) => {\n                                return(\n                                    <tr key={index}>\n                                        <td>\n                                            <div className=\"flex items-center space-x-3\">\n                                                <div>\n                                                    <div className=\"font-bold\">{item.title}</div>\n                                                </div>\n                                            </div>\n                                        </td>\n                                        <td>\n                                            <button className=\"btn btn-square btn-ghost\" onClick={() => updateNewsStatus(item,index)}>\n                                                <td style={{color:item.is_active?\"green\":\"red\"}}>{item.is_active?\"ACTIVE\":\"InActive\"}</td>\n                                            </button>\n                                        </td>\n                                        <td>\n                                            <button className=\"btn btn-square btn-ghost\" onClick={() => deleteNews(item,index)}>\n                                                <td style={{color:item.is_delete?\"green\":\"red\"}}>{item.is_delete?\"DELETED\":\"DELETE\"}</td>\n                                            </button>\n                                        </td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n            <ToastContainer />\n        </>\n    )\n}\n\nexport default Integration","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setPageTitle } from '../../features/common/headerSlice'\nimport Integration from '../../features/integration'\n\nfunction InternalPage(){\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(setPageTitle({ title : \"News\"}))\n      }, [])\n      \n    return(\n        <Integration />\n    )\n}\n\nexport default InternalPage"],"names":["title","children","topMargin","TopSideButtons","className","styleClass","useDispatch","useState","newsList","setnewsList","useEffect","getNewsList","token","localStorage","getItem","USER_CONFIG","API_REQUEST","URSL","news","console","log","data","status","deleteNews","item","selectedIndex","id","response","items","map","value","index","is_delete","toast","updateNewsStatus","is_active","length","onClick","style","color","dispatch","setPageTitle"],"sourceRoot":""}