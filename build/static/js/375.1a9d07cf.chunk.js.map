{"version":3,"file":"static/js/375.1a9d07cf.chunk.js","mappings":"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","sources":["components/Cards/TitleCard.js","components/Typography/Subtitle.js","features/integration/index.js","pages/protected/Integration.js"],"sourcesContent":["import Subtitle from \"../Typography/Subtitle\"\n\n  \n  function TitleCard({title, children, topMargin, TopSideButtons}){\n      return(\n          <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\n\n            {/* Title for Card */}\n              <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\n                {title}\n\n                {/* Top side button, show only if present */}\n                {\n                    TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\n                }\n              </Subtitle>\n              \n              <div className=\"divider mt-2\"></div>\n          \n              {/** Card Body */}\n              <div className='h-full w-full pb-6 bg-base-100'>\n                  {children}\n              </div>\n          </div>\n          \n      )\n  }\n  \n  \n  export default TitleCard"," function Subtitle({styleClass, children}){\n    return(\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\n    )\n}\n\nexport default Subtitle","import { useState } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport TitleCard from \"../../components/Cards/TitleCard\"\nimport { showNotification } from \"../common/headerSlice\"\nimport { useEffect } from \"react\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { URSL } from \"../../constants/URLS\"\nimport { USER_CONFIG } from \"../../constants/User\"\nimport {API_REQUEST} from '../../api/index';\nimport { openModal } from \"../common/modalSlice\"\nimport { CONFIRMATION_MODAL_CLOSE_TYPES, MODAL_BODY_TYPES } from '../../utils/globalConstantUtil'\n\nconst TopSideButtons = () => {\n\n    const dispatch = useDispatch()\n\n    const openAddNewLeadModal = () => {\n        dispatch(openModal({title : \"Add New News\", bodyType : MODAL_BODY_TYPES.NEWS_ADD_MODAL,size:\"lg\"}))\n    }\n\n    return(\n        <div className=\"inline-block float-right\">\n            <button className=\"btn px-6 btn-sm normal-case btn-primary\" onClick={() => openAddNewLeadModal()}>Add New</button>\n        </div>\n    )\n}\n\n\nfunction Integration(){\n\n    const dispatch = useDispatch()\n\n    const [newsList, setnewsList] = useState([])\n    useEffect(()=>{\n        getNewsList();\n    },[])\n    const getNewsList=async()=>{\n        try {\n            const token=localStorage.getItem(USER_CONFIG.TOKEN_DETAIL)\n            const news=await API_REQUEST.getData(URSL.GET_NEWS,token)\n            console.log(news,\"ss\")\n            if(news.data.status==200){\n                console.log(news.data.data)\n                setnewsList(news?.data?.data)\n            }else{\n                throw news\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    const deleteNews=async(item,selectedIndex)=>{\n        try {\n            const token=localStorage.getItem(USER_CONFIG.TOKEN_DETAIL);\n            const response=await API_REQUEST.postData(URSL.DELETE_UPDATE_NEWS,{id:item.id},token)\n            if(response.data.status !== 200)\n                throw response\n\n                setnewsList(items =>\n                items.map((value, index) => {\n                    if (index === selectedIndex) {\n                        value.is_delete =  value.is_delete?0:1;\n                    } \n                    return value;\n                }),\n            );\n            toast(`Delete Status Updated Successfully`)\n        } catch (error) {\n            toast(\"News not deleted\")\n            console.log(error);\n        }\n    }\n    const updateNewsStatus=async(item,selectedIndex)=>{\n        try {\n            const token=localStorage.getItem(USER_CONFIG.TOKEN_DETAIL);\n            const response=await API_REQUEST.postData(URSL.UPDATE_NEWS_STATUS,{id:item.id},token)\n            if(response.data.status !== 200)\n                throw response\n            setnewsList(items =>\n                items.map((value, index) => {\n                    if (index === selectedIndex) {\n                        value.is_active =  value.is_active?0:1;\n                    } \n                    return value;\n                }),\n            );\n            toast(\"News Status Changed\")\n        } catch (error) {\n            toast(\"News Status not Changes\")\n            console.log(error);\n        }\n    }\n    return(\n        <>\n            <TitleCard title=\"All News\" topMargin=\"mt-2\" TopSideButtons={<TopSideButtons />} >\n             <div className=\"overflow-x-auto w-full\">\n                <table className=\"table w-full\">\n                    <thead>\n                    <tr>\n                        <th>Title</th>\n                        <th>Activity</th>\n                        <th>Delete</th>\n                        <th></th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            newsList.length>0 &&\n                            newsList.map((item, index) => {\n                                return(\n                                    <tr key={index}>\n                                        <td>\n                                            <div className=\"flex items-center space-x-3\">\n                                                <div>\n                                                    <div className=\"font-bold\">{item.title}</div>\n                                                </div>\n                                            </div>\n                                        </td>\n                                        <td>\n                                            <button className=\"btn btn-square btn-ghost\" onClick={() => updateNewsStatus(item,index)}>\n                                                <td style={{color:item.is_active?\"green\":\"red\"}}>{item.is_active?\"ACTIVE\":\"InActive\"}</td>\n                                            </button>\n                                        </td>\n                                        <td>\n                                            <button className=\"btn btn-square btn-ghost\" onClick={() => deleteNews(item,index)}>\n                                                <td style={{color:item.is_delete?\"green\":\"red\"}}>{item.is_delete?\"DELETED\":\"DELETE\"}</td>\n                                            </button>\n                                        </td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n            </TitleCard>\n            <ToastContainer />\n        </>\n    )\n}\n\nexport default Integration","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setPageTitle } from '../../features/common/headerSlice'\nimport Integration from '../../features/integration'\n\nfunction InternalPage(){\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(setPageTitle({ title : \"News\"}))\n      }, [])\n      \n    return(\n        <Integration />\n    )\n}\n\nexport default InternalPage"],"names":["_ref","title","children","topMargin","TopSideButtons","_jsxs","className","Subtitle","styleClass","_jsx","concat","dispatch","useDispatch","onClick","openModal","bodyType","MODAL_BODY_TYPES","NEWS_ADD_MODAL","size","_useState","useState","_useState2","_slicedToArray","newsList","setnewsList","useEffect","getNewsList","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","news","_news$data","wrap","_context","prev","next","localStorage","getItem","USER_CONFIG","TOKEN_DETAIL","API_REQUEST","getData","URSL","GET_NEWS","sent","console","log","data","status","t0","stop","apply","arguments","deleteNews","_ref2","_callee2","item","selectedIndex","response","_context2","postData","DELETE_UPDATE_NEWS","id","items","map","value","index","is_delete","toast","_x","_x2","updateNewsStatus","_ref3","_callee3","_context3","UPDATE_NEWS_STATUS","is_active","_x3","_x4","_Fragment","TitleCard","length","style","color","ToastContainer","setPageTitle","Integration"],"sourceRoot":""}